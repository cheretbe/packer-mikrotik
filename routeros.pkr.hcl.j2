variable "box_path" {
  type    = string
  default = "build/boxes"
}

variable "vagrant_routeros_plugin_version" {
  type    = string
  default = ""
}

variable "test_qemu_available" {
  type        = string
  default     = "/usr/bin/qemu-kvm"
  description = "If this file exists, then qemu is available and will be used"
}

locals {
  # 6.x: a - select all, i - install, n - do you want to keep old conf, y - disk erasure warning
  install_seq_v6 = "a<wait>i<wait>n<wait>y"

  # 7.x: a - select all, i - install, y - disk erasure warning
  install_seq_v7 = "a<wait>i<wait>y"

  login_seq_pre_v6_49 = "/user set [/user find name=\"admin\"] password=\"vagrant\"<enter>"
  login_seq_post_v6_49 = "vagrant<enter><wait>vagrant<enter>"

  source_provider = fileexists(var.test_qemu_available) ? "qemu" : "virtualbox-iso"
}
{% for version in versions %}
source "virtualbox-iso" "routeros-{{ version | replace(".", "_") }}" {
  boot_command            = [
    "<wait5>",
    local.install_seq_v{{ version.split('.')[0] }},
    "<wait10><wait10><enter>",
    "<wait10><wait10><wait10>",
    "admin<enter><wait><wait>",
    "<enter><wait><wait>",
    "n<wait><wait>",
    "<enter><wait5>",
    local.login_seq_{{ 'pre' if ((version.split('.')[0] | int) < 7 and (version.split('.')[1] | int) < 49) else 'post' }}_v6_49,
    "<wait><wait>",
    "/ip dhcp-client add disabled=no interface=ether1 add-default-route=no use-peer-dns=no use-peer-ntp=no<enter>",
    "<wait5>",
    ":global packerHost \"http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}\"<enter>",
    "/tool fetch url=\"$packerHost/setup.rsc\" keep-result=yes dst-path=\"setup.rsc\"<enter>",
    "<wait5>", "/import setup.rsc<enter>",
    "<wait10><wait10><wait10>"
  ]
  disk_size               = "256"
  format                  = "ova"
  guest_additions_mode    = "disable"
  guest_os_type           = "Linux_64"
  http_directory          = "."
  iso_checksum            = "none"
  iso_url                 = "https://download.mikrotik.com/routeros/{{ version }}/mikrotik-{{ version }}.iso"
  shutdown_command        = "execute \"/system shutdown\""
  ssh_password            = "vagrant"
  ssh_username            = "admin"
  ssh_wait_timeout        = "60s"
  vboxmanage              = {% raw %}[
    ["modifyvm", "{{ .Name }}", "--memory", "128"],
    ["modifyvm", "{{ .Name }}", "--graphicscontroller", "vmsvga"],
    ["modifyvm", "{{ .Name }}", "--vram", "128"],
    ["modifyvm", "{{ .Name }}", "--acpi", "on"],
    ["modifyvm", "{{ .Name }}", "--ioapic", "on"],
    ["modifyvm", "{{ .Name }}", "--hpet", "on"],
    ["modifyvm", "{{ .Name }}", "--rtcuseutc", "on"],
    ["modifyvm", "{{ .Name }}", "--pae", "on"],
    ["modifyvm", "{{ .Name }}", "--usb", "on"],
    ["modifyvm", "{{ .Name }}", "--usbehci", "off"]
  ]{% endraw %}
  virtualbox_version_file = ""
  vm_name                 = "routeros-{{ version }}"
}
{% endfor %}{% for version in versions %}
source "qemu" "routeros-{{ version | replace(".", "_") }}" {
  iso_url                 = "https://download.mikrotik.com/routeros/{{ version }}/mikrotik-{{ version }}.iso"
  iso_checksum            = "none"
  http_directory          = "."
  shutdown_command        = "execute \"/system shutdown\""
  disk_size               = "256M"
  format                  = "qcow2"
  accelerator             = "kvm"
  ssh_password            = "vagrant"
  ssh_username            = "admin"
  ssh_timeout             = "60s"
  vm_name                 = "routeros-{{ version }}"
  net_device              = "e1000"
  disk_interface          = "ide"
  boot_wait               = "10s"
  headless                = true
  memory                  = 128
  boot_key_interval       = "25ms"
  boot_command            = [
    local.install_seq_v{{ version.split('.')[0] }},
    "<wait20s><enter>",
    "<wait1m>",
    "admin<enter><wait2s>",
    "<enter><wait2s>",
    "n<wait2s>",
    "<enter><wait2s>",
    local.login_seq_{{ 'pre' if ((version.split('.')[0] | int) < 7 and (version.split('.')[1] | int) < 49) else 'post' }}_v6_49,
    "<wait2s>",
    "/ip dhcp-client add disabled=no interface=ether1 add-default-route=no use-peer-dns=no use-peer-ntp=no<enter>",
    "<wait2s>",
    ":global packerHost \"http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}\"<enter>",
    "/tool fetch url=\"$packerHost/setup.rsc\" keep-result=yes dst-path=\"setup.rsc\"<enter>",
    "<wait5s>",
    "/import setup.rsc<enter>",
    "<wait10s>",
  ]
}
{% endfor %}{% for branch in branches %}
build {
  name = "{{ branch["name"] }}"

  sources = [ format("source.%s.routeros-{{ branch["version"] | replace(".", "_") }}", local.source_provider) ]

  post-processor "vagrant" {
    keep_input_artifact  = false
    compression_level    = 9
    include              = [
      "vagrant-plugins-routeros/pkg/vagrant-routeros-${var.vagrant_routeros_plugin_version}.gem",
      "vagrant-plugins-routeros/vagrant_routeros_plugin_version.json"
    ]
    output               = "${var.box_path}/{{ branch["name"] }}_{% raw %}{{ .Provider }}{% endraw %}_{{ branch["version"] }}.box"
    vagrantfile_template = "vagrantfile.template"
  }
}
{% endfor %}
